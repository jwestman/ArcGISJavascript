<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="viewport" content="initial-scale=1, maximum-scale=1,user-scalable=no" />
  <title>Print Exact Scale</title>
  <link rel="stylesheet" href="http://js.arcgis.com/3.7/js/esri/css/esri.css">
  <style>
    html, body {
      height: 100%;
      width: 100%;
    }

    #map {
      margin-top: 50px;
      margin-bottom: 50px;
      margin-left: 25px;
      margin-right: 25px;
      padding: 0px;
      height: 700px !important;
      border: 2px solid Black;
    }

    body {
      background-color: #FFF;
      overflow: hidden;
      font-family: "Trebuchet MS";
    }

    #divPrint {
      position: absolute;
      left: 100px;
      top: 20px;
    }

    #selScale, #previewButton
    {
      margin-right: 20px;
    }
  </style>
  <script src="http://js.arcgis.com/3.7/"></script>
  <script>
    var map;

    var printUrl = "http://jwtest.esri.com/arcgis/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task";

    require(["esri/map", "esri/geometry/scaleUtils", "esri/request",
             "esri/tasks/PrintTask", "esri/tasks/PrintTemplate", "esri/tasks/PrintParameters",
             "dojo/domReady!"],

      //---------------------------------------------------------------------
      function (Map, ScaleUtils, EsriRequest,
                PrintTask, PrintTemplate, PrintParameters) {
        map = new Map("map", {
          'basemap': "streets",
          'center': [-93.13183, 44.85694], // long, lat
          'zoom': 14,
          'sliderStyle': "small"
        });

        //---------------------------------------------------------------------
        doPrint = function () {
          console.log(map.getScale() + "\n" + map.getLevel());
          //console.log(returnScaledExtent().join("\n"));

          var template = new PrintTemplate();
          template.format = "PDF";
          template.layout = "Letter ANSI A Landscape";
          template.preserveScale = true;  //  Critical for Exact Scale Printing

          var params = new PrintParameters();
          params.map = map;
          params.template = template;

          var printTask = new PrintTask(printUrl, { async: false });
          printTask.execute(params,
                            function (results) { window.open(results.url, "PDF"); },
                            function (error) { console.log(error); }
          );
        };

        //---------------------------------------------------------------------
        doPreview = function () {
          var scale = dojo.byId('selScale').value;
          if (scale != -1) {
            // use scaleUtils to "adjust" the map's scale, preserving center, to the desired scale
            var sext = ScaleUtils.getExtentForScale(map, scale);
            map.setExtent(sext);
          }
        }

        //---------------------------------------------------------------------
        requestPreCallback = function (ioArgs) {
          if (ioArgs.url.indexOf(printUrl) > -1) {
            // get the webMapAsJson as an object
            var wm = dojo.fromJson(ioArgs.content.Web_Map_as_JSON);

            var scale = dojo.byId('selScale').value;

            if (scale != -1) {
              // compute the new extent -- actually not needed just update the mapOptions.scale
              //var sext = ScaleUtils.getExtentForScale(map, scale);

              // update the extent
              //wm.mapOptions.extent.xmin = sext.xmin;
              //wm.mapOptions.extent.ymin = sext.ymin;
              //wm.mapOptions.extent.xmax = sext.xmax;
              //wm.mapOptions.extent.ymax = sext.ymax;

              //update the scale
              wm.mapOptions.scale = scale;

              // set content as string
              ioArgs.content.Web_Map_as_JSON = dojo.toJson(wm);
            }

          }

          return ioArgs;
        }

        //wire the buttons
        dojo.connect(dojo.byId('printButton'), 'click', doPrint);
        dojo.connect(dojo.byId('previewButton'), 'click', doPreview);

        //wire the preRequestHandler, which overwrites the webmapjson.mapOptions.scale
        EsriRequest.setRequestPreCallback(requestPreCallback);
      });
  </script>
</head>

<body>
  <div id="map">
  </div>
  <div id="divPrint">
    <b>Desired Scale: </b>
    <select id="selScale">
      <option value="1200">1:1200 -- 1:100ft</option>
      <option value="2400">1:2400 -- 1:200ft</option>
      <option value="6000" selected>1:6000 -- 1:500ft</option>
      <option value="12000">1:12000 -- 1:1,000ft</option>
      <option value="24000">1:24000 -- 1:2,000ft</option>
      <option value="36000">1:36000 -- 1:3,000ft</option>
      <option value="48000">1:48000 -- 1:4,000ft</option>
      <option value="60000">1:60000 -- 1:5,000ft</option>
      <option value="-1">Current</option>
    </select>
    <input id="previewButton" type="button" value="   Preview Selected Scale   " />
    <input id="printButton" type="button" value="   Print   " />
  </div>
</body>
</html>
